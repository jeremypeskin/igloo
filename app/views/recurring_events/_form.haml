= form_for(@recurring_event) do |f|
  - if @recurring_event.errors.any?
    #error_explanation
      %h2
        = pluralize(@recurring_event.errors.count, "error")
        prohibited this recurring event from being saved:
      %ul
        - @recurring_event.errors.full_messages.each do |message|
          %li= message
  .field.mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
    = f.label :description, :class=>"mdl-textfield__label"
    = f.text_field :description, :class=>"mdl-textfield__input", required:true, autofocus:true
  %br/
  .field.mdl-textfield.mdl-js-textfield.mdl-textfield--floating-label
    = f.label :amount, :class=>"mdl-textfield__label"
    = f.number_field :amount, :class=>"mdl-textfield__input"
  %br/
  .select-container
    .select
      = f.collection_select(:category, RecurringEvent.categories.map { |c| [c.first, c.first] }, :first, :second, {:include_blank => false}, { class: "select-text" })
      %span.select-highlight
      %span.select-bar
      %label.select-label Category
  %br/
  .select-container.unit-event
    .select
      = f.collection_select(:unit_id, @units, :id, :name, {:include_blank => "Select a unit"}, { class: "select-text" })
      %span.select-highlight
      %span.select-bar
      %label.select-label Unit
  .select-container.property-event
    .select
      = f.collection_select(:property_id, @properties, :id, :address, {:include_blank => "Select a property"}, { class: "select-text" })
      %span.select-highlight
      %span.select-bar
      %label.select-label Property
  %label.mdl-radio.mdl-js-radio.mdl-js-ripple-effect.mb-50{:for => "assign-to-unit"}
    = f.radio_button( :event_type, 'Unit', options={id:"assign-to-unit", class:"mdl-radio__button event-type-radio"})
    %span.mdl-radio__label Assign to Unit
  %label.mdl-radio.mdl-js-radio.mdl-js-ripple-effect.mb-50{:for => "assign-to-property"}
    = f.radio_button( :event_type, 'Property', options={id:"assign-to-property", class:"mdl-radio__button event-type-radio"})
    %span.mdl-radio__label Assign to Property
  .actions
    = f.submit :class=>"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent"
